import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from groups.easy_sources import run_all

BOT_TOKEN = "8392167879:AAG9GgPCXrajvdZca5vJcYopk3HO5w2hBhE"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ /news ‚Äî –æ—Ç—Ä–∏–º–∞—î—à –∞–∫—Ç—É–∞–ª—å–Ω—ñ –Ω–æ–≤–∏–Ω–∏ –∑ –ï–∫–æ–Ω–æ–º—ñ—á–Ω–æ—ó –ü—Ä–∞–≤–¥–∏ (—Ä–æ–∑–¥—ñ–ª ¬´–§—ñ–Ω–∞–Ω—Å–∏¬ª)."
    )


@dp.message(Command("news"))
async def news_easy_cmd(message: types.Message):
    await message.answer("‚è≥ –ó–±–∏—Ä–∞—é –Ω–æ–≤–∏–Ω–∏ –∑ Epravda /finances ‚Ä¶")
    try:
        results = run_all()
        if not results:
            await message.answer("‚ö†Ô∏è –ù–æ–≤–∏–Ω–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.")
            return

        text = ""
        for i, n in enumerate(results, 1):
            text += f"{i}. {n['title']} ({n['date']})\n{n['url']}\n\n"

        # –î—ñ–ª–∏–º–æ –Ω–∞ —á–∞—Å—Ç–∏–Ω–∏, —â–æ–± –Ω–µ –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ 4096 —Å–∏–º–≤–æ–ª—ñ–≤
        parts = [text[i:i + 4000] for i in range(0, len(text), 4000)]
        for part in parts:
            await message.answer(part, disable_web_page_preview=True)

    except Exception as e:
        await message.answer(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–±–æ—Ä—É –Ω–æ–≤–∏–Ω: {e}")


async def main():
    print("‚úÖ Bot started successfully")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())